---
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<div
  class="fixed inset-0 z-50 flex items-center justify-center p-4 bg-cover bg-center bg-no-repeat bg min-h-screen"
>
  <div class="fixed inset-0 bg-black/50"></div>
  <div
    class="w-full max-w-md bg-white rounded-xl shadow-xl p-8 transition-colors duration-300 relative z-50"
  >
    <h1 class="text-3xl font-semibold mb-6 text-primary font-heading text-center">
      {t("register.title")}
    </h1>

    <form action="/api/auth/register" method="post" class="space-y-6">
      <div>
        <label for="name" class="block mb-2 font-body text-gray-700"
          >{t("register.name")}</label
        >
        <input
          type="text"
          name="name"
          id="name"
          class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent bg-transparent transition-all"
          required
        />
      </div>

      <div>
        <label for="email" class="block mb-2 font-body text-gray-700"
          >{t("register.email")}</label
        >
        <input
          type="email"
          name="email"
          id="email"
          class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent bg-transparent transition-all"
          required
        />
      </div>

      <div>
        <label for="password" class="block mb-2 font-body text-gray-700"
          >{t("register.password")}</label
        >
        <input
          type="password"
          name="password"
          id="password"
          class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent bg-transparent transition-all"
          required
        />
      </div>

      <button
        type="submit"
        class="w-full bg-primary text-white py-2 px-4 rounded-lg hover:bg-opacity-90 transition-opacity font-semibold font-body"
      >
        {t("register.register")}
      </button>
    </form>

    <p class="mt-6 text-center text-gray-600 font-body">
      {t("register.alreadyHaveAccount")}
      <a
        href={translatePath(`/signin`)}
        class="text-accent hover:text-accent/80 transition-colors"
      >
        {t("register.signIn")}
      </a>
    </p>

    <div class="flex items-center justify-center mt-6">
      <label for="languageSwitcher" class="block font-body text-gray-700"
          >{t("register.language")} :</label
        >
      <select
        aria-label="Language Switcher"
        class="border-none bg-transparent font-body text-primary"
        value={lang}
        id="languageSwitcher"
      >
        <option value="en" selected={lang === "en"}>EN</option>
        <option value="it" selected={lang === "it"}>IT</option>
      </select>
    </div>
  </div>
</div>

<style>
  .bg {
    background-image: url("../assets/hero/VetroCucina.jpg");
  }

  @media screen and (min-width: 769px) {
    .bg {
      background-size: cover;
      background-image: url("../assets/hero/VetroCucinaL.jpg");
    }
  }

  @media screen and (min-width: 1281px) {
    .bg {
      background-image: url("../assets/hero/VetroCucinaL.jpg");
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const languageSwitcher = document.getElementById("languageSwitcher");

    // Add an event listener to handle language change
    languageSwitcher.addEventListener("change", (event: Event) => {
      const selectedLang = (event.target as HTMLSelectElement).value ?? "it";
      window.location.href = selectedLang === 'it' ? `/register`: `/${selectedLang}/register`; // Redirect to the selected language page
    });
  });
</script>